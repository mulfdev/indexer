export const minimartAbi = [
    {
        inputs: [
            { internalType: 'address', name: 'initialOwner', type: 'address' },
            { internalType: 'string', name: 'name', type: 'string' },
            { internalType: 'string', name: 'version', type: 'string' },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    { inputs: [], name: 'AlreadyListed', type: 'error' },
    { inputs: [], name: 'CallNotSupported', type: 'error' },
    { inputs: [], name: 'CouldNotPaySeller', type: 'error' },
    { inputs: [], name: 'ECDSAInvalidSignature', type: 'error' },
    {
        inputs: [{ internalType: 'uint256', name: 'length', type: 'uint256' }],
        name: 'ECDSAInvalidSignatureLength',
        type: 'error',
    },
    {
        inputs: [{ internalType: 'bytes32', name: 's', type: 'bytes32' }],
        name: 'ECDSAInvalidSignatureS',
        type: 'error',
    },
    { inputs: [], name: 'EnforcedPause', type: 'error' },
    { inputs: [], name: 'ExpectedPause', type: 'error' },
    { inputs: [], name: 'FeeWithdrawlFailed', type: 'error' },
    { inputs: [], name: 'InvalidBatchSize', type: 'error' },
    { inputs: [], name: 'InvalidShortString', type: 'error' },
    { inputs: [], name: 'InvalidTaker', type: 'error' },
    { inputs: [], name: 'MarketplaceNotApproved', type: 'error' },
    { inputs: [], name: 'NonERC721Interface', type: 'error' },
    { inputs: [], name: 'NonceIncorrect', type: 'error' },
    { inputs: [], name: 'NotListingCreator', type: 'error' },
    { inputs: [], name: 'NotTokenOwner', type: 'error' },
    { inputs: [], name: 'OrderExpired', type: 'error' },
    { inputs: [], name: 'OrderNotFound', type: 'error' },
    { inputs: [], name: 'OrderPriceTooLow', type: 'error' },
    { inputs: [], name: 'OrderPriceWrong', type: 'error' },
    {
        inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
        name: 'OwnableInvalidOwner',
        type: 'error',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'OwnableUnauthorizedAccount',
        type: 'error',
    },
    { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
    { inputs: [], name: 'RefundFailed', type: 'error' },
    { inputs: [], name: 'SignerMustBeSeller', type: 'error' },
    {
        inputs: [{ internalType: 'string', name: 'str', type: 'string' }],
        name: 'StringTooLong',
        type: 'error',
    },
    { inputs: [], name: 'ZeroAddress', type: 'error' },
    {
        anonymous: false,
        inputs: [],
        name: 'EIP712DomainChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'orderId',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'buyer',
                type: 'address',
            },
        ],
        name: 'OrderFulfilled',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'orderId',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'seller',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'nftContract',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'price',
                type: 'uint256',
            },
        ],
        name: 'OrderListed',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'orderId',
                type: 'bytes32',
            },
        ],
        name: 'OrderRemoved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'Paused',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'Unpaused',
        type: 'event',
    },
    { stateMutability: 'payable', type: 'fallback' },
    {
        inputs: [],
        name: 'FEE_BPS',
        outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'ORDER_TYPEHASH',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        name: 'activeOrderHash',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    { internalType: 'address', name: 'seller', type: 'address' },
                    { internalType: 'uint96', name: 'price', type: 'uint96' },
                    {
                        internalType: 'address',
                        name: 'nftContract',
                        type: 'address',
                    },
                    { internalType: 'uint64', name: 'expiration', type: 'uint64' },
                    { internalType: 'address', name: 'taker', type: 'address' },
                    { internalType: 'uint64', name: 'nonce', type: 'uint64' },
                    { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
                ],
                internalType: 'struct MiniMart.Order',
                name: 'order',
                type: 'tuple',
            },
            { internalType: 'bytes', name: 'signature', type: 'bytes' },
        ],
        name: 'addOrder',
        outputs: [{ internalType: 'bytes32', name: 'orderDigest', type: 'bytes32' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32[]',
                name: 'orderHashes',
                type: 'bytes32[]',
            },
        ],
        name: 'batchRemoveOrder',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'domainSeparator',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'eip712Domain',
        outputs: [
            { internalType: 'bytes1', name: 'fields', type: 'bytes1' },
            { internalType: 'string', name: 'name', type: 'string' },
            { internalType: 'string', name: 'version', type: 'string' },
            { internalType: 'uint256', name: 'chainId', type: 'uint256' },
            {
                internalType: 'address',
                name: 'verifyingContract',
                type: 'address',
            },
            { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
            { internalType: 'uint256[]', name: 'extensions', type: 'uint256[]' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes32', name: 'orderHash', type: 'bytes32' }],
        name: 'fulfillOrder',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes32', name: 'orderHash', type: 'bytes32' }],
        name: 'getOrder',
        outputs: [
            {
                components: [
                    { internalType: 'address', name: 'seller', type: 'address' },
                    { internalType: 'uint96', name: 'price', type: 'uint96' },
                    {
                        internalType: 'address',
                        name: 'nftContract',
                        type: 'address',
                    },
                    { internalType: 'uint64', name: 'expiration', type: 'uint64' },
                    { internalType: 'address', name: 'taker', type: 'address' },
                    { internalType: 'uint64', name: 'nonce', type: 'uint64' },
                    { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
                ],
                internalType: 'struct MiniMart.Order',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    { internalType: 'address', name: 'seller', type: 'address' },
                    { internalType: 'uint96', name: 'price', type: 'uint96' },
                    {
                        internalType: 'address',
                        name: 'nftContract',
                        type: 'address',
                    },
                    { internalType: 'uint64', name: 'expiration', type: 'uint64' },
                    { internalType: 'address', name: 'taker', type: 'address' },
                    { internalType: 'uint64', name: 'nonce', type: 'uint64' },
                    { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
                ],
                internalType: 'struct MiniMart.Order',
                name: 'order',
                type: 'tuple',
            },
        ],
        name: 'hashOrder',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'seller', type: 'address' }],
        name: 'nonces',
        outputs: [{ internalType: 'uint64', name: 'nonce', type: 'uint64' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes32', name: 'orderHash', type: 'bytes32' }],
        name: 'orders',
        outputs: [
            { internalType: 'address', name: 'seller', type: 'address' },
            { internalType: 'uint96', name: 'price', type: 'uint96' },
            { internalType: 'address', name: 'nftContract', type: 'address' },
            { internalType: 'uint64', name: 'expiration', type: 'uint64' },
            { internalType: 'address', name: 'taker', type: 'address' },
            { internalType: 'uint64', name: 'nonce', type: 'uint64' },
            { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'pause',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'paused',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'pendingFees',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes32', name: 'orderHash', type: 'bytes32' }],
        name: 'removeOrder',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'unpause',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'withdrawFees',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    { stateMutability: 'payable', type: 'receive' },
] as const;
